name: Tests

on:
    push:
        branches:
            - master
    pull_request:

jobs:
    PHPUnit:

        runs-on: ubuntu-22.04
        strategy:
            fail-fast: false
            matrix:
                include:
                    - { php-version: 8.1, symfony-locked-version: none, orm-version: none, dependency-version: prefer-lowest }
                    - { php-version: 8.1, symfony-locked-version: 6.4.*, orm-version: '^2.18', dependency-version: prefer-stable }
                    - { php-version: 8.1, symfony-locked-version: 6.4.*, orm-version: none, dependency-version: prefer-stable }
                    - { php-version: 8.2, symfony-locked-version: none, orm-version: '^2.18', dependency-version: prefer-stable }
                    - { php-version: 8.3, symfony-locked-version: none, orm-version: none, dependency-version: prefer-stable }
        name: PHPUnit (PHP ${{matrix.php-version}}, Symfony Version Lock ${{ matrix.symfony-locked-version }}, ORM Version ${{matrix.orm-version }}, ${{ matrix.dependency-version }})
        steps:
            -   uses: actions/checkout@v3
            -   uses: shivammathur/setup-php@v2
                with:
                  php-version: ${{ matrix.php-version }}
                  coverage: none
                  tools: composer:v2
            -   uses: actions/cache@v3
                with:
                    path: vendor
                    key: composer-${{ runner.os }}-${{ matrix.php-version }}-${{ matrix.symfony-locked-version }}-${{ matrix.dependency-version }}-${{ hashFiles('composer.json') }}
                    restore-keys: |
                        composer-${{ runner.os }}-${{ matrix.php-version }}-${{ matrix.symfony-locked-version }}-${{ matrix.dependency-version }}-
            -   run: VERSION=${{ matrix.symfony-locked-version }} .github/workflows/lock-symfony-version.sh
                if: matrix.symfony-locked-version != 'none'
            -   run: composer require --no-update --no-interaction --no-scripts --no-progress --ansi doctrine/orm '${{ matrix.orm-version}}'
                if: matrix.orm-version != 'none'
            -   run: composer update --${{ matrix.dependency-version }} --no-interaction --no-scripts --no-progress --ansi
            -   run: composer show
            -   run: vendor/bin/phpunit
